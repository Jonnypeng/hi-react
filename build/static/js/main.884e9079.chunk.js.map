{"version":3,"sources":["Layout.tsx","pages/Home/index.tsx","pages/TextToSound/index.tsx","pages/Bindppt/index.tsx","pages/PlayVideo/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Layout","Container","this","props","children","Component","displayName","name","Home","Row","Col","md","span","offset","xs","to","className","TextToSoundState","TextToSound","text","speed","audioUrl","downEl","audio","Audio","state","result","encodeURI","play","getRes","src","href","download","Date","now","toString","url","getUrl","Promise","resolve","fetch","method","responseType","then","res","blob","resUrl","window","URL","createObjectURL","Form","Control","as","rows","placeholder","onChange","e","target","value","type","step","min","max","Button","variant","size","onClick","getSound","bind","ref","Bindppt","lg","style","position","width","height","PlayVideoState","playBtnShow","videoShow","PlayVideo","videoEl","setAttribute","setState","display","playVideo","id","preload","webkit-playsinline","x5-video-player-type","x5-video-player-fullscreen","x5-video-orientation","onEnded","videoEnd","App","hashType","path","component","from","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.884e9079.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nexport default class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <Container>\r\n        {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n\n\nexport default class Home extends Component<any>{\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col md={{ span: 2, offset: 3 }} xs={4}>\n                        <Link to=\"/tts\" className=\"btn btn-outline-info\">文字转语音</Link>\n                    </Col>\n                    <Col md={{ span: 2 }} xs={4}>\n                        <Link to=\"/bindppt\" className=\"btn btn-outline-info\">嵌套ppt</Link>\n                    </Col>\n                    <Col md={{ span: 2 }} xs={4}>\n                        <Link to=\"/playvideo\" className=\"btn btn-outline-info\">视频播放</Link>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\ninterface TextToSoundProps extends RouteComponentProps {\n}\nclass TextToSoundState {\n    //downHref:string = \"\";\n}\n\nexport default class TextToSound extends Component<TextToSoundProps, TextToSoundState>{\n    private text: string = \"\";\n    private speed: string = \"5\";\n    private audioUrl: string = \"\";\n    private downEl: HTMLAnchorElement | null = null;\n    audio: HTMLAudioElement = new Audio();\n    constructor(props: TextToSoundProps) {\n        super(props);\n        this.state = new TextToSoundState();\n    }\n\n\n    private getUrl(speed: string, text: string): string {\n        let result: string = `http://tts.baidu.com/text2audio?lan=en&ie=UTF-8&spd=${speed}&text=${text}`;\n        result = encodeURI(result);\n        return result;\n    }\n\n    private async getSound(play: boolean) {\n        this.audioUrl = await this.getRes(this.speed, this.text);\n        this.audio.src = this.audioUrl;\n        if (play) {\n            this.audio.play();\n        }\n        (this.downEl as HTMLAnchorElement).href = this.audioUrl;\n        (this.downEl as HTMLAnchorElement).download = Date.now().toString() + \".mp3\";\n    }\n\n    private getRes(speed: string, text: string): Promise<string> {\n        let url = this.getUrl(speed, text);\n        return new Promise((resolve) => {\n            fetch(url, ({\n                method: 'get',\n                responseType: 'blob'\n            } as any)).then(res => {\n                return res.blob();\n            }).then(blob => {\n                let resUrl: string = window.URL.createObjectURL(blob);\n                resolve(resUrl);\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col md={{span:6,offset:3}} xs={12}>\n                        <h4>TTS应用</h4>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col  md={{span:6,offset:3}} xs={12}>\n                        <Form.Control as=\"textarea\" rows={5} placeholder={\"请输入英文字符\"} onChange={e => { this.text = e.target.value }} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={{span:6,offset:3}} xs={12}>\n                        <Form.Control type=\"range\" onChange={e => { this.speed = e.target.value }} step={1} min={1} max={9} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={{offset:3,span:2}} xs={4} className=\"flex-center\">\n                        <Button variant=\"primary\" size=\"lg\" onClick={this.getSound.bind(this, false)}>获取</Button>\n                    </Col>\n                    <Col md={{span:2}}  xs={4} className=\"flex-center\">\n                        <Button variant=\"success\" size=\"lg\" onClick={this.getSound.bind(this, true)}>播放</Button>\n                    </Col>\n                    <Col md={{span:2}}  xs={4} className=\"flex-center\">\n                        <Button variant=\"outline-danger\" size=\"lg\">\n                            <a ref={ref => { this.downEl = ref }}>下载</a>\n                        </Button>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { Row, Col, Container } from 'react-bootstrap';\ninterface BindpptProps extends RouteComponentProps {\n}\nclass BindpptState {\n}\n\n\nexport default class Bindppt extends Component<BindpptProps, BindpptState>{\n    constructor(props: BindpptProps) {\n        super(props);\n    }\n    render() {\n        return (<div>\n                <Row>\n                    <Col xs={12} md={12} lg={12}>\n                        <div style={{ position: \"absolute\", width: \"calc(375px - 8%)\", height: \"200px\" }}>\n                            <iframe src=\"https://docs.qq.com/slide/DT0lVc0VWY2NQVmVh\" className=\"slidePPT\" style={{ width: \"100%\", height: \"100%\" }}>\n                            </iframe>\n                        </div>\n                    </Col>\n                </Row>\n        </div>);\n    }\n}","import React, { Component } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport \"./index.css\";\ninterface PlayVideoProps extends RouteComponentProps {\n}\nclass PlayVideoState {\n    playBtnShow: boolean = true;\n    videoShow:boolean = false;\n}\nexport default class PlayVideo extends Component<PlayVideoProps, PlayVideoState>{\n    private videoEl: HTMLVideoElement = null;\n    constructor(props: PlayVideoProps) {\n        super(props);\n        this.state = new PlayVideoState();\n    }\n\n    componentDidMount(){\n        // this.videoEl = document.getElementById(\"video\") as HTMLVideoElement;\n        //  console.log(this.videoEl);\n         this.videoEl.setAttribute(\"autobuffer\",\"true\");\n         this.videoEl.setAttribute(\"playsinline\",\"true\");\n    }\n\n    private playVideo(): void {\n        this.videoEl.play();\n        this.setState({playBtnShow:false,videoShow:true});\n    }\n\n    private videoEnd():void{\n        this.setState({playBtnShow:true,videoShow:false}); \n    }\n\n    render() {\n        return (<div>\n            <Row style={{ display: this.state.playBtnShow === true ? \"block\" : \"none\" }}>\n                <Col xs={{ span: 6, offset: 3 }} md={{ span: 6, offset: 3 }} lg={{ span: 6, offset: 3 }} className=\"text-center\">\n                    <Button variant=\"info\" className=\"playBtn\" size=\"lg\" onClick={this.playVideo.bind(this)}>播放视频</Button>\n                </Col>\n            </Row>\n            <Row>\n                <Col xs={12} md={12} lg={12}>\n                    <video id=\"video\" preload=\"false\" webkit-playsinline=\"true\" x5-video-player-type=\"h5\" x5-video-player-fullscreen=\"true\" x5-video-orientation=\"portraint\" \n                    src=\"videos/video1.mp4\" style={{display:this.state.videoShow === true ? \"block\" : \"none\"}} onEnded={this.videoEnd.bind(this)} ref={ref=>{this.videoEl=ref}}></video>\n                </Col>\n            </Row>\n        </div>);\n    }\n}","import React, { Component } from 'react';\nimport { Route, HashRouter as Router, Link, RouteComponentProps, Redirect } from 'react-router-dom';\nimport Layout from './Layout';\nimport Home from './pages/Home/';\nimport './App.css';\nimport TextToSound from './pages/TextToSound';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Bindppt from './pages/Bindppt';\nimport PlayVideo from './pages/PlayVideo';\n\nexport default class App extends Component {\n\n  // gotoHome(){\n  //   window. \n  // }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <Row>\n            <Col md={{ span: 6, offset: 3 }} xs={12} >\n              <Router hashType=\"hashbang\">\n                <h4>\n                  <Link to=\"/home\">\n                    Hi！React\n                </Link>\n                </h4>\n                <em><small>Powered By Jonny</small></em>\n              </Router>\n              <hr />\n            </Col>\n          </Row>\n         </Container>\n        <Layout>\n          <Router hashType=\"hashbang\" >\n            <Route path='/home' component={Home} />\n            <Route path='/tts' component={TextToSound} />\n            <Route path='/bindppt' component={Bindppt} />\n            <Route path='/playvideo' component={PlayVideo} />\n            <Redirect from=\"/\" to=\"/home\" />\n          </Router>\n        </Layout>\n      </div>\n    );\n\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}